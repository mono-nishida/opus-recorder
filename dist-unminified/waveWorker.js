/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(typeof self !== 'undefined' ? self : this, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/waveWorker.js":
/*!***************************!*\
  !*** ./src/waveWorker.js ***!
  \***************************/
/***/ (() => {

eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar WavePCM = function WavePCM(config) {\n  var config = Object.assign({\n    wavBitDepth: 16,\n    numberOfChannels: 1\n  }, config);\n\n  if (!config['wavSampleRate']) {\n    throw new Error(\"wavSampleRate value is required to record. NOTE: Audio is not resampled!\");\n  }\n\n  if ([8, 16, 24, 32].indexOf(config['wavBitDepth']) === -1) {\n    throw new Error(\"Only 8, 16, 24 and 32 bits per sample are supported\");\n  }\n\n  this.numberOfChannels = config['numberOfChannels'];\n  this.bitDepth = config['wavBitDepth'];\n  this.sampleRate = config['wavSampleRate'];\n  this.recordedBuffers = [];\n  this.bytesPerSample = this.bitDepth / 8;\n};\n\nWavePCM.prototype.record = function (buffers) {\n  var bufferLength = buffers[0].length;\n  var reducedData = new Uint8Array(bufferLength * this.numberOfChannels * this.bytesPerSample); // Interleave\n\n  for (var i = 0; i < bufferLength; i++) {\n    for (var channel = 0; channel < this.numberOfChannels; channel++) {\n      var outputIndex = (i * this.numberOfChannels + channel) * this.bytesPerSample; // clip the signal if it exceeds [-1, 1]\n\n      var sample = Math.max(-1, Math.min(1, buffers[channel][i])); // bit reduce and convert to integer\n\n      switch (this.bytesPerSample) {\n        case 4:\n          // 32 bits signed\n          sample = sample * 2147483647.5 - 0.5;\n          reducedData[outputIndex] = sample;\n          reducedData[outputIndex + 1] = sample >> 8;\n          reducedData[outputIndex + 2] = sample >> 16;\n          reducedData[outputIndex + 3] = sample >> 24;\n          break;\n\n        case 3:\n          // 24 bits signed\n          sample = sample * 8388607.5 - 0.5;\n          reducedData[outputIndex] = sample;\n          reducedData[outputIndex + 1] = sample >> 8;\n          reducedData[outputIndex + 2] = sample >> 16;\n          break;\n\n        case 2:\n          // 16 bits signed\n          sample = sample * 32767.5 - 0.5;\n          reducedData[outputIndex] = sample;\n          reducedData[outputIndex + 1] = sample >> 8;\n          break;\n\n        case 1:\n          // 8 bits unsigned\n          reducedData[outputIndex] = (sample + 1) * 127.5;\n          break;\n\n        default:\n          throw new Error(\"Only 8, 16, 24 and 32 bits per sample are supported\");\n      }\n    }\n  }\n\n  this.recordedBuffers.push(reducedData);\n};\n\nWavePCM.prototype.requestData = function () {\n  var bufferLength = this.recordedBuffers[0].length;\n  var dataLength = this.recordedBuffers.length * bufferLength;\n  var headerLength = 44;\n  var wav = new Uint8Array(headerLength + dataLength);\n  var view = new DataView(wav.buffer);\n  view.setUint32(0, 1380533830, false); // RIFF identifier 'RIFF'\n\n  view.setUint32(4, 36 + dataLength, true); // file length minus RIFF identifier length and file description length\n\n  view.setUint32(8, 1463899717, false); // RIFF type 'WAVE'\n\n  view.setUint32(12, 1718449184, false); // format chunk identifier 'fmt '\n\n  view.setUint32(16, 16, true); // format chunk length\n\n  view.setUint16(20, 1, true); // sample format (raw)\n\n  view.setUint16(22, this.numberOfChannels, true); // channel count\n\n  view.setUint32(24, this.sampleRate, true); // sample rate\n\n  view.setUint32(28, this.sampleRate * this.bytesPerSample * this.numberOfChannels, true); // byte rate (sample rate * block align)\n\n  view.setUint16(32, this.bytesPerSample * this.numberOfChannels, true); // block align (channel count * bytes per sample)\n\n  view.setUint16(34, this.bitDepth, true); // bits per sample\n\n  view.setUint32(36, 1684108385, false); // data chunk identifier 'data'\n\n  view.setUint32(40, dataLength, true); // data chunk length\n\n  for (var i = 0; i < this.recordedBuffers.length; i++) {\n    wav.set(this.recordedBuffers[i], i * bufferLength + headerLength);\n  }\n\n  return {\n    message: 'page',\n    page: wav\n  };\n}; // Run in AudioWorkletGlobal scope\n\n\nif (typeof registerProcessor === 'function') {\n  var EncoderWorklet = /*#__PURE__*/function (_AudioWorkletProcesso) {\n    _inherits(EncoderWorklet, _AudioWorkletProcesso);\n\n    var _super = _createSuper(EncoderWorklet);\n\n    function EncoderWorklet() {\n      var _this;\n\n      _classCallCheck(this, EncoderWorklet);\n\n      _this = _super.call(this);\n      _this.continueProcess = true;\n\n      _this.port.onmessage = function (_ref) {\n        var data = _ref.data;\n\n        switch (data['command']) {\n          case 'done':\n            if (_this.recorder) {\n              _this.postPage(_this.recorder.requestData());\n\n              _this.port.postMessage({\n                message: 'done'\n              });\n\n              delete _this.recorder;\n            }\n\n            break;\n\n          case 'close':\n            _this.continueProcess = false;\n            break;\n\n          case 'init':\n            _this.recorder = new WavePCM(data);\n\n            _this.port.postMessage({\n              message: 'ready'\n            });\n\n            break;\n\n          default: // Ignore any unknown commands and continue recieving commands\n\n        }\n      };\n\n      return _this;\n    }\n\n    _createClass(EncoderWorklet, [{\n      key: \"process\",\n      value: function process(inputs) {\n        if (this.recorder && inputs[0] && inputs[0].length && inputs[0][0] && inputs[0][0].length) {\n          this.recorder.record(inputs[0]);\n        }\n\n        return this.continueProcess;\n      }\n    }, {\n      key: \"postPage\",\n      value: function postPage(pageData) {\n        if (pageData) {\n          this.port.postMessage(pageData, [pageData.page.buffer]);\n        }\n      }\n    }]);\n\n    return EncoderWorklet;\n  }( /*#__PURE__*/_wrapNativeSuper(AudioWorkletProcessor));\n\n  registerProcessor('encoder-worklet', EncoderWorklet);\n} // run in scriptProcessor worker scope\nelse {\n    var recorder;\n\n    var postPageGlobal = function postPageGlobal(pageData) {\n      if (pageData) {\n        postMessage(pageData, [pageData.page.buffer]);\n      }\n    };\n\n    onmessage = function onmessage(_ref2) {\n      var data = _ref2.data;\n\n      switch (data['command']) {\n        case 'encode':\n          if (recorder) {\n            recorder.record(data['buffers']);\n          }\n\n          break;\n\n        case 'done':\n          if (recorder) {\n            postPageGlobal(recorder.requestData());\n            postMessage({\n              message: 'done'\n            });\n            recorder = null;\n          }\n\n          break;\n\n        case 'close':\n          close();\n          break;\n\n        case 'init':\n          recorder = new WavePCM(data);\n          postMessage({\n            message: 'ready'\n          });\n          break;\n\n        default: // Ignore any unknown commands and continue recieving commands\n\n      }\n    };\n  } // Exports for unit testing.\n\n\nvar module = module || {};\nmodule.exports = WavePCM;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/waveWorker.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/waveWorker.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});